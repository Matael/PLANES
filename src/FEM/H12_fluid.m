% H16_fluid.m%% Copyright (C) 2014 < Olivier DAZEL <olivier.dazel@univ-lemans.fr> >%% This file is part of PLANES.%% PLANES (Porous LAum NumErical Simulator) is a software to compute the% vibroacoustic response of sound packages containing coupled% acoustic/elastic/porous substructures. It is mainly based on the% Finite-Element Method and some numerical methods developped at% LAUM (http://laum.univ-lemans.fr).%% You can download the latest version of PLANES at% https://github.com/OlivierDAZEL/PLANES% or find more details on Olivier's webpage% http://perso.univ-lemans.fr/~odazel/%% For any questions or if you want to% contribute to this project, contact Olivier.%% PLANES is free software: you can redistribute it and/or modify% it under the terms of the GNU General Public License as published by% the Free Software Foundation, either version 3 of the License, or% (at your option) any later version.%% This program is distributed in the hope that it will be useful,% but WITHOUT ANY WARRANTY; without even the implied warranty of% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the% GNU General Public License for more details.%% You should have received a copy of the GNU General Public License% along with this program. If not, see <http://www.gnu.org/licenses/>.%%function [vh,vq] = H12_fluid(lx,ly)vh=zeros(12,12);vq=zeros(12,12);[p_d1,p_d2,p_d3,p_d4,p_d5,p_d6,p_d7,p_d8,p_d9,p_d10,p_d11,p_d12]=H12_shape_functions(lx,ly);for i_test=1:12    for i_champs=1:12        eval(['pq=multiply_polynom_2D(p_d',num2str(i_test),',p_d',num2str(i_champs), ');']);        eval(['vq(',num2str(i_test),',',num2str(i_champs),')=integrate_polynom_2D(pq,lx,ly);';]);        eval(['pxqx=multiply_polynom_2D(derive_polynom_2D_x(p_d',num2str(i_test),'),derive_polynom_2D_x(p_d',num2str(i_champs),'));']);        eval(['pyqy=multiply_polynom_2D(derive_polynom_2D_y(p_d',num2str(i_test),'),derive_polynom_2D_y(p_d',num2str(i_champs),'));']);        eval(['vh(',num2str(i_test),',',num2str(i_champs),')=integrate_polynom_2D(pxqx,lx,ly)+integrate_polynom_2D(pyqy,lx,ly);';]);    endend% for i_test=1:4%     for j_test=1:4%         for i_champs=1:4%             for j_champs=1:4%%                 indice_test=expand_H12(i_test,j_test);%                 indice_champs=expand_H12(i_champs,j_champs);%%                 if (indice_test*indice_champs)~=0%                 eval(['pq=multiply_polynom_2D(Psi_',num2str(i_test),num2str(j_test),',Psi_',num2str(i_champs),num2str(j_champs) ');'])%                 eval(['vq(',num2str(indice_test),',',num2str(indice_champs),')=integrate_polynom_2D(pq,lx,ly);';]);%                 eval(['pxqx=multiply_polynom_2D(derive_polynom_2D_x(Psi_',num2str(i_test),num2str(j_test),'),derive_polynom_2D_x(Psi_',num2str(i_champs),num2str(j_champs) '));']);%                 eval(['pyqy=multiply_polynom_2D(derive_polynom_2D_y(Psi_',num2str(i_test),num2str(j_test),'),derive_polynom_2D_y(Psi_',num2str(i_champs),num2str(j_champs) '));']);%                 eval(['vh(',num2str(indice_test),',',num2str(indice_champs),')=integrate_polynom_2D(pxqx,lx,ly)+integrate_polynom_2D(pyqy,lx,ly);';]);%                 end%             end%         end%     end% end